@model NRLObstacleReporting.Models.ObstacleCompleteModel
@{
    ViewData["Title"] = "Report Overview";
}

<div class="text-center">
    <h1 class="display-4 s">Overview</h1>
</div>

<div class="flex justify-center mt-6">
    <table class="table-auto border border-gray-300 text-center w-3/4">
        <caption class="caption-top text-lg font-bold mb-2">
            Obstacle Report: @Model.GetHashCode()
        </caption>
        <thead>
            <tr>
                <th class="border border-gray-300 px-4 py-2 bg-blue-300 text-black rounded-tl-md">Data</th>
                <th class="border border-gray-300 px-4 py-2 bg-blue-300 text-black rounded-tr-md">Response</th>
            </tr>
        </thead>
        <tbody>
        <!-- ObstacleName -->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Name</td>
            <td class="border border-gray-300 px-4 py-2">@Model.ObstacleName</td>
        </tr>
        <!-- ObstacleHeight -->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Height</td>
            <td class="border border-gray-300 px-4 py-2">@Model.ObstacleHeightMeter</td>
        </tr>
        <!-- ObstacleDescription -->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Description</td>
            <td class="border border-gray-300 px-4 py-2">@Model.ObstacleDescription</td>
        </tr>
        <!-- ObstacleType -->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Type</td>
            <td class="border border-gray-300 px-4 py-2">@Model.ObstacleType</td>
        </tr>
        <!-- Illuminated-->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Illuminated</td>
            <td class="border border-gray-300 px-4 py-2">@Model.ObstacleIlluminated</td>
        </tr>
        <!-- ObstacleCoordinates -->
        <tr class="hover:bg-gray-50">
            <td class="border border-gray-300 px-4 py-2 text-black rounded-tr-md font-bold">Coordinates</td>
            <td class="border border-gray-300 px-4 py-2">@Model.GeometryGeoJson</td>
        </tr>
        
        </tbody>
    </table>
</div>

@if (Model?.GeometryGeoJson != null)
{
    <div class="h-dvh overflow-hidden rounded-xl">

        <section>
            <div
                id="map" style="height: 50dvh; width: 50dvw; border-radius: 0.75rem; overflow: hidden; border: 1px solid #e5e7eb;">
            </div>
        </section>
    </div>
}

@section Scripts {
    @if (Model?.GeometryGeoJson != null)
    {
        <link rel="stylesheet" href="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.css"/>
        <script src="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.js"></script>
        <script src="~/js/MapScripts/GeoJsonExtractCoordinates.js" asp-append-version="true"></script>
        <script src="~/js/MapScripts/GenerateMap.js" asp-append-version="true"></script>
        <script>
            let map = GenerateMap();
            let geojsonCoordinates = @Html.Raw(Model.GeometryGeoJson);
            let geojsonLayer = L.geoJSON(geojsonCoordinates);
            geojsonLayer.addTo(map);
            map.setView(GeoJsonExtractCoordinates(geojsonCoordinates));
        </script>
    }
}
