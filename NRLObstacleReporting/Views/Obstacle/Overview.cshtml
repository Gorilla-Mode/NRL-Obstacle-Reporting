@model NRLObstacleReporting.Models.ObstacleCompleteModel
@{
ViewData["Title"] = "Report Overview";

}
<div>
    <table class="center">
        <caption>Obstacle Report: @Model.GetHashCode()</caption>
        <thead>
        <tr>
            <th scope="col">Data</th>
            <th scope="col">Response</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th scope="row">Height</th>
            <td>@Model.ObstacleHeightMeter</td>
        </tr>
        <tr>
            <th scope="row">Coordinates</th>
            <td>@Model.GeometryGeoJson</td>
        </tr>
        <tr>
            <th scope="row">Type</th>
            <td>@Model.ObstacleType</td>
        </tr>
        <tr>
            <th scope="row">Illuminated</th>
            <td>@Model.ObstacleIlluminated</td>
        </tr>
        <tr>
            <th scope="row">Description</th>
            <td>@Model.ObstacleDescription</td>
        </tr>
        <tr>
            <th scope="row">Name</th>
            <td>@Model.ObstacleName</td>
        </tr>
        </tbody>
    </table>
</div>

@if (Model?.GeometryGeoJson != null)
{
    <div class="h-dvh overflow-hidden rounded-xl">
        <section>
            <div
                id="map" style="height: 50dvh; width: 50dvw; border-radius: 0.75rem; overflow: hidden; border: 1px solid #e5e7eb;">
            </div>
        </section>
    </div>
}

@section Scripts {
    @* Script to add a map to the view *@
    @if (Model?.GeometryGeoJson != null)
    {
        <link rel="stylesheet" href="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.css"/>
        <script src="https://unpkg.com/leaflet-draw@1.0.4/dist/leaflet.draw.js"></script>
        <script>
        var map = L.map('map').setView([58.14671, 7.9956], 13);

        L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);
        </script>

        <script>
         var geojsonCoordinates = @Html.Raw(Model.GeometryGeoJson)
        // var geojsonData = JSON.parse(geojsonCoordinates);
        var geojsonLayer = L.geoJSON(geojsonCoordinates);
        geojsonLayer.addTo(map);
        map.setMaxBounds(geojsonLayer.getBounds())
    </script>

    }
}