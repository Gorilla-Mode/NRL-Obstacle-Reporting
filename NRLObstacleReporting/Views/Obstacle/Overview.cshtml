@model NRLObstacleReporting.Models.ObstacleCompleteModel
@{
ViewData["Title"] = "Report Overview";

}
<div>
    <table class="center">
        <caption>Obstacle Report: @Model.GetHashCode()</caption>
        <thead>
        <tr>
            <th scope="col">Data</th>
            <th scope="col">Response</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th scope="row">Height</th>
            <td>@Model.ObstacleHeightMeter</td>
        </tr>
        <tr>
                <th scope="row">Coordinates</th>
                <td>@Model.GeometryGeoJson</td>
         </tr>
       
        <tr>
            <th scope="row">Type</th>
            <td>@Model.ObstacleType</td>
        </tr>
        <tr>
            <th scope="row">Illuminated</th>
            <td>@Model.ObstacleIlluminated</td>
        </tr>
        <tr>
            <th scope="row">Description</th>
            <td>@Model.ObstacleDescription</td>
        </tr>
        <tr>
            <th scope="row">Name</th>
            <td>@Model.ObstacleName</td>
        </tr>
        </tbody>
    </table>
</div>

@section Scripts {
    <!-- importing leaflet.draw -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>

    <script>
        (function () {
          // 1) Map + basemap
          var map = L.map('overview-map').setView([20, 0], 2);
          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; OpenStreetMap contributors'
          }).addTo(map);

          // 2) Get the saved GeoJSON string
          var jsontext = document.getElementById('OverviewCoordinates').value;

          // 3) Parse and render markers
          var fc = JSON.parse(jsontext);
          var layer = L.geoJSON(fc, {
            pointToLayer: function (feature, latlng) {
              return L.marker(latlng);
            }
          }).addTo(map);

        })();
    </script>
}
